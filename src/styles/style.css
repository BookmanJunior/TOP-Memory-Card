:root {
  --text: #ffffff;
  --primary-bg-color: #000000;
  --bg-overlay: rgba(0, 0, 0, 0.5);
}

/*
  1. Use a more-intuitive box-sizing model.
*/
*,
*::before,
*::after {
  box-sizing: border-box;
}
/*
  2. Remove default margin
*/
* {
  margin: 0;
  padding: 0;
}
/*
  Typographic tweaks!
  3. Add accessible line-height
  4. Improve text rendering
*/
body {
  line-height: 1.5;
  -webkit-font-smoothing: antialiased;
}
/*
  5. Improve media defaults
*/
img,
picture,
video,
canvas,
svg {
  display: block;
  max-width: 100%;
}
/*
  6. Remove built-in form typography styles
*/
input,
button,
textarea,
select {
  font: inherit;
}
/*
  7. Avoid text overflows
*/
p,
h1,
h2,
h3,
h4,
h5,
h6 {
  overflow-wrap: break-word;
}
/*
  8. Create a root stacking context
*/
#root,
#__next {
  isolation: isolate;
}

body {
  font-family: Verdana, Geneva, Tahoma, sans-serif;
  background-color: var(--primary-bg-color);
  color: var(--text);
}

#root {
  --size: 1em;

  gap: var(--size);
  padding: var(--size);
  min-height: 100vh;
  max-width: 1000px;
  margin: auto;
}

button {
  background-color: transparent;
  border: none;
}

button,
.card-container {
  cursor: pointer;
  color: var(--text);
}

/* welcome screen styles */

.welcome-screen {
  border: 1px solid;
  border-radius: 5px;
  height: 300px;
  align-items: center;
  justify-content: center;
  gap: var(--size);
}

.game-mode-btns {
  gap: var(--size);
}

/* loading screen styles */

.loading-screen {
  margin: auto;
}

.loading-screen > span {
  display: inline-block;
  animation: bounce 400ms ease-in-out alternate infinite;
}

.loading-screen > span:nth-child(2) {
  animation-delay: 100ms;
}

.loading-screen > span:last-child {
  animation-delay: 200ms;
}

@keyframes bounce {
  from {
    transform: translateY(0);
  }
  to {
    transform: translateY(-10px);
  }
}

/* game on styles */

.top-screen {
  justify-content: space-between;
  flex-wrap: wrap;
  z-index: 3;
}

.back-btn,
#ArrowLeftSvg {
  width: 40px;
  height: 40px;
}

#ArrowLeftPath {
  stroke: var(--text);
}

.cards-container {
  display: grid;
  place-items: center;
  gap: var(--size);
}

.cards-container.small {
  grid-template-columns: repeat(auto-fit, minmax(230px, 1fr));
  margin-block: auto;
}

.cards-container.large {
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
}

.card-container:hover {
  box-shadow: 0 0 10px 5px #a41ff1;
}

.card-container {
  display: grid;
  overflow: hidden;
}

.card-container > :is(img, span) {
  grid-area: 1 / 1 / auto / auto;
  width: 100%;
}

.card-container > img {
  aspect-ratio: 1 / 1;
  object-position: 10% 0;
  object-fit: cover;
}

.cards-container.large img {
  aspect-ratio: 1.14 / 1;
}

.card-container > span {
  display: grid;
  place-items: center;

  z-index: 1;
  place-self: end center;
  text-align: center;
  min-height: 50px;
  font-size: 1.2rem;
}

/* Modal styles */
.modal-container {
  display: none;
  inset: 0;
  position: fixed;
  min-height: 100vh;
  width: 100vw;
  text-align: center;
}

.modal-container.active {
  display: grid;
  place-content: center;
  z-index: 2;
}

.game-end-msg {
  font-size: 1.2rem;
}

/* utility classes */

.font-bold {
  font-weight: 600;
}

.flex-row {
  display: flex;
}

.bg-overlay {
  background-color: var(--bg-overlay);
}

.hover-underline::after {
  display: block;
  content: "";
  width: 100%;
  height: 2px;
  background-color: var(--text);
  transform: scaleX(0);
  transform-origin: right;
  transition: transform 200ms ease-in 50ms;
}

.hover-underline:hover::after {
  transform-origin: left;
  transform: scaleX(1);
}

.hover-underline.active::after {
  transform: scaleX(1);
}

.flex-column {
  display: flex;
  flex-direction: column;
}

.block {
  display: block;
  margin-inline: auto;
}
